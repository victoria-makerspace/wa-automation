#!/usr/bin/env python3

from archive import archive
from args import args
from contacts import Contacts
from timeout import timeout
from cancel import auto_cancel
from datetime import datetime, timezone
from describe import describe
from approve import auto_approve
from session import Session
from discourse import Discourse, sync_group

import sys
from tzlocal import get_localzone

now = datetime.now(timezone.utc)
session = Session()
contacts = Contacts(session)
dc_client = Discourse(contacts)

operations = {
        'archive': lambda x: archive(contacts, now),
        'describe': lambda x: describe(contacts, x),
        'cancel': lambda x: auto_cancel(contacts),
        'approve' : lambda x: auto_approve(session),
        'timeout' : lambda x: timeout(session, contacts, now),
        'discourse_sync': lambda x: sync_group(dc_client, x)}

for op in args.operations:
    if op[0] not in operations:
        print(f'Error: {op[0]} is not a valid operation', file = sys.stderr)
        continue

    print()
    operations[op[0]](op[1:])
